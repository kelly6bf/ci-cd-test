# Workflow 이름은 구별이 가능할 정도로 자유롭게 적어주어도 된다. 
# 필수 옵션은 아니다.
name: Java CI with Gradle

# main 브랜치에 PR 이벤트가 발생하면 Workflow가 실행된다.
# 브랜치 구분이 없으면 on: [pull_request]로 해주어도 된다.
on:
  push:
    branches: [ "main" ]

# 테스트 결과 작성을 위해 쓰기권한 추가
permissions: write-all
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # Runner로 코드를 이동
    - name: checkout
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: make application-database.yml
      run: |
        # create application-database.yml
        cd ./src/main/resources

        # application-database.yml 파일 생성
        touch ./application-database.yml

        # GitHub-Actions 에서 설정한 값을 application-database.yaml 파일에 쓰기
        echo ${{secrets.DATABASEYML}} | base64 --decode > ./application-database.yml
      shell: bash

    - name: Gradle Caching
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Grant Execute Permission For Gradlew
      run: chmod +x gradlew

    - name: Build With Gradle
      run: ./gradlew build -x test
